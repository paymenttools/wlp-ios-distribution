{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Configuration"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Registering a user’s device."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Retrieving, signing, and managing tokens for various payment operations."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fetching payment means and payment tokens from the server."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Deactivate payment means"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Handling errors related to token and payment operations."}]}]}]},{"anchor":"Configuration","level":2,"type":"heading","text":"Configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You have to call the main static function "},{"type":"codeVoice","code":"WhitelabelPay\/WhitelabelPay\/configure(with:)"},{"type":"text","text":" to configure the SDK and retrieve an instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay"},{"type":"text","text":"."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The host app will be responsible for keeping the reference to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay"},{"type":"text","text":" instance.*"}]}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function receives a parameter of type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Configuration"},{"type":"text","text":" that receives tree params"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Vendor’s "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"tenanId"}]},{"type":"text","text":" of type "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":"environment"}]},{"type":"text","text":" of type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Env"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":"azp"}]},{"type":"text","text":": JWT - Authorized party of type "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage:"}]},{"type":"codeListing","syntax":"swift","code":["func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","","    let configuration = Configuration(tenantId: \"xx7xxx46-2297-4872-96xx-7xxx213xxxxx\",","                                      environment: .development,","                                      azp: \"wlp-integration-client\")","","    let whitelabel = WhitelabelPay.configure(with: configuration)","","    \/\/ The instance has to be stored by the host app for future use.","","    return true","}"]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure to replace the parameters with valid values. The ones in this example are not valid!"}]}],"type":"aside","name":"Tip"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For testing the integration of the SDK in your host application, use the "},{"type":"codeVoice","code":"integration"},{"type":"text","text":" environment. Please make sure to switch the environment to "},{"type":"codeVoice","code":"production"},{"type":"text","text":" once you build your application for production."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"development"},{"type":"text","text":" environment is unstable and should only be used if this has been advised by us."}]}],"type":"aside","name":"Note"},{"anchor":"Registration","level":2,"type":"heading","text":"Registration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first step to do after configuring the SDK is to register the device with the backend. To do so, call the async func "},{"type":"codeVoice","code":"WhitelabelPay\/WhitelabelPay\/enroll()"},{"type":"text","text":". If the enroll process succeeds it will return an onboarding token that can be used at the cashier desk to finalise the onboarding process. This token is also stored on the device for offline use. The type of this token will always be "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/onboarding"},{"type":"text","text":"."}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function should only be called if the device is not already registered, in order to check if the device was not already registerd, please use "},{"type":"codeVoice","code":"WhitelabelPay\/WhitelabelPay\/isRegistered"}]}],"type":"aside","name":"Tip"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Throws"}]},{"type":"text","text":": The function throws a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError"},{"type":"text","text":" under several scenarios:"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Error Type"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Description"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/deviceAlreadyRegistered"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"if the device is already registered."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/identityRegistrationResponseError"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"if there is an error during registration."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/userAlreadyOnboarded"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"if the user is already onboarded."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/storeFailure(_:)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"if there are no tokens to sign, this can happen also if the host app does not have Keychain access (missing entitlements)."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/registryOnboardingResponseError(_:)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"if there is any other error during the process."}]}]]],"header":"row"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage:"}]}]},{"type":"codeListing","syntax":"swift","code":["do {","   let token = try await whitelabel.enroll()","    \/\/Initialize UI after enrolment - show enrolment token","} catch {","    print(\"Error during device registration: \\(error)\")","}"]},{"anchor":"PaymentMeans","level":2,"type":"heading","text":"PaymentMeans"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Request the list of payment means by calling "},{"type":"codeVoice","code":"WhitelabelPay\/WhitelabelPay\/getPaymentMeans()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function fetches the current list payment means. Currently only one payment means can be active and all the locally stored payment tokens will be part of this active payment means."}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the device must be registered before any payment means"},{"type":"text","text":" "},{"type":"text","text":"can be retrieved otherwise it will throw a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/deviceNotRegistered"},{"type":"text","text":"."}]}],"type":"aside","name":"Tip"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If network connectivity is available, this function fetches the payment means from the network, otherwise, it retrieves them from the local storage."}]}],"type":"aside","name":"Note"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous array of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/PaymentMean"},{"type":"text","text":"."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Returns"}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"- "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/deviceNotRegistered"},{"type":"text","text":" if the device is not registered."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Throws"}]}]}}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage:"}]}]},{"type":"codeListing","syntax":"swift","code":["do {","    let paymentMeans = try await whitelabel.getPaymentMeans()","} catch {","    print(\"Error during payment means fetching: \\(error)\")","}"]},{"anchor":"Performing-a-payment-with-a-signed-Token","level":2,"type":"heading","text":"Performing a payment with a signed Token"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Retrieve a payment token by calling the async function "},{"type":"codeVoice","code":"WhitelabelPay\/WhitelabelPay\/getToken()"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function first checks for an active internet connection. If one exists, it fetches fresh tokens for the currently active payment means and removes the previous ones from storage. If no active payment means are found, it fetches an onboarding token."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If there is no internet connection and there are locally stored tokens, it will return a signed token from the local storage."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Please note that currently there are only 5 tokens stored and when the user is in offline mode, calling "},{"type":"codeVoice","code":"getToken()"},{"type":"text","text":" multiple times can result in the token storage being emptied. So, keep in mind that requesting a token will automatically remove it from the offline storage even if it was not actually used for payment. This behavior is a bit different when there is an internet connection. If the internet connection is active then the SDK will fetch a new set of tokens each time."}]}],"type":"aside","name":"Note"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Token"},{"type":"text","text":" of type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/payment"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/onboarding"},{"type":"text","text":" if no payment mean is active."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Returns"}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/noInternetConnection(_:)"},{"type":"text","text":" if there is no active internet connection and there are no stored tokens."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Throws"}]}]}}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage:"}]}]},{"type":"codeListing","syntax":"swift","code":["do {","    let token = try await whitelabel.getToken()","","   \/\/ Generate an aztec image with the signed value of the token.","   let data = try token.signed.data(using: .utf8)","   \/\/ Draw the aztec code image. ","   ...","} catch {","    print(\"Error during token fetching: \\(error)\")","}"]},{"anchor":"Payment-Means-Deactivation","level":2,"type":"heading","text":"Payment Means Deactivation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Deactivates an active payment means."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function sends an HTTP request to the server to deactivate the specified payment means."},{"type":"text","text":" "},{"type":"text","text":"It also removes any associated tokens from storage. If the operation is successful, it returns "},{"type":"codeVoice","code":"True"},{"type":"text","text":"."}]},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The identifier of the payment means to deactivate."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Parameter"}]},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"paymentMeansId"}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the deactivation was successful, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Returns"}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/failureToRetrievePaymentMeans(_:)"},{"type":"text","text":" if an error occurs during the deactivation process."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Throws"}]}]}}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Be sure to handle the potential errors this function might throw."}]}],"type":"aside","name":"Tip"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage"}]},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["do {","    let isSuccess = try await whitelabel.deactivatePaymentMeans(paymentMeansId: someId)","    if isSuccess {","        print(\"Payment means successfully deactivated.\")","    } else {","        print(\"Failed to deactivate payment means.\")","    }","} catch {","    print(\"Error during payment means deactivation: \\(error)\")","}"]},{"anchor":"Transactions-available-in-future-versions","level":3,"type":"heading","text":"Transactions - available in future versions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fetch payment transactions from the server."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function sends an HTTP request to the server to fetch payment transactions."},{"type":"text","text":" "},{"type":"text","text":"It returns an array of "},{"type":"codeVoice","code":"TransactionDTO"},{"type":"text","text":" objects, representing payment transactions."}]},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous array of "},{"type":"codeVoice","code":"TransactionDTO"},{"type":"text","text":" representing payment transactions."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Returns"}]}]}}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage"}]},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["do {","    let transactions = try await whitelabel.fetchTransactions()","} catch {","    print(\"Error during transactions fetching: \\(error)\")","}"]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This feature will be available in a future release."}]}],"type":"aside","name":"Warning"},{"anchor":"Reseting","level":2,"type":"heading","text":"Reseting"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Purge all SDK data from the device’s keychain."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function calls the "},{"type":"codeVoice","code":"WhitelabelPay\/WhitelabelPay\/reset()"},{"type":"text","text":" method from the "},{"type":"codeVoice","code":"store"},{"type":"text","text":" object which is responsible for erasing all stored data from the device’s keychain."}]},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If any error occurs during data removal, might happen if the app has troubles accessing the keychain."}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Throws"}]}]}}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this function with caution, as it will permanently remove all SDK data including the enrollment\/registration status."}]}],"type":"aside","name":"Tip"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage"}]},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["do {","    try WhitelabelPay.shared.reset()","} catch {","    print(\"Error during data reset: \\(error)\")","}"]},{"anchor":"Environments","level":2,"type":"heading","text":"Environments"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When switching the environment please make sure you also call the reset() func. If you miss that the SDK will be in an incositent state that will result in getting authorization errors."}]}],"type":"aside","name":"Warning"},{"anchor":"Data-Collection","level":2,"type":"heading","text":"Data Collection"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PaymentTools SDK does not store or collect personal or app related data other than an unique identifier generated when the SDK is initialized for identification purposes."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/whitelabelpaysdk\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The SDK is a convienient wrapper around the White Label Rest API. It provides a way solution to register the user device and store tokens for offline usage."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Getting started","role":"article","modules":[{"name":"WhitelabelPaySDK"}]},"hierarchy":{"paths":[["doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK"]]},"references":{"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/failureToRetrievePaymentMeans(_:)":{"role":"symbol","title":"WhitelabelPayError.failureToRetrievePaymentMeans(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"failureToRetrievePaymentMeans"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/failureToRetrievePaymentMeans(_:)","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/failuretoretrievepaymentmeans(_:)"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/TokenType/onboarding":{"role":"symbol","title":"TokenType.onboarding","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"onboarding"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/onboarding","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/tokentype\/onboarding"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/deviceAlreadyRegistered":{"role":"symbol","title":"WhitelabelPayError.deviceAlreadyRegistered","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deviceAlreadyRegistered"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/deviceAlreadyRegistered","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/devicealreadyregistered"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPay":{"role":"symbol","title":"WhitelabelPay","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhitelabelPay"}],"abstract":[{"type":"text","text":"WhitelabelPay SDK to enroll into the Payment Tools White Label Pay program."},{"type":"text","text":" "},{"type":"text","text":"After successful enrollment you can retrieve or remove payment tokens."},{"type":"text","text":" "},{"type":"text","text":"Public private key, device id, enrollment and payment tokens are"},{"type":"text","text":" "},{"type":"text","text":"stored on the device keychain."}],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WhitelabelPay"}],"url":"\/documentation\/whitelabelpaysdk\/whitelabelpay"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/deviceNotRegistered":{"role":"symbol","title":"WhitelabelPayError.deviceNotRegistered","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deviceNotRegistered"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/deviceNotRegistered","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/devicenotregistered"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/Env":{"role":"symbol","title":"Env","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Env"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Env"},{"type":"text","text":" defines on which environment the SDK should Run."}],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Env","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Env"}],"url":"\/documentation\/whitelabelpaysdk\/env"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/registryOnboardingResponseError(_:)":{"role":"symbol","title":"WhitelabelPayError.registryOnboardingResponseError(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"registryOnboardingResponseError"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/registryOnboardingResponseError(_:)","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/registryonboardingresponseerror(_:)"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/PaymentMean":{"role":"symbol","title":"PaymentMean","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaymentMean"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/PaymentMean","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PaymentMean"}],"url":"\/documentation\/whitelabelpaysdk\/paymentmean"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK":{"role":"collection","title":"WhitelabelPaySDK","abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/identityRegistrationResponseError":{"role":"symbol","title":"WhitelabelPayError.identityRegistrationResponseError","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"identityRegistrationResponseError"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/identityRegistrationResponseError","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/identityregistrationresponseerror"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/userAlreadyOnboarded":{"role":"symbol","title":"WhitelabelPayError.userAlreadyOnboarded","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"userAlreadyOnboarded"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/userAlreadyOnboarded","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/useralreadyonboarded"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError":{"role":"symbol","title":"WhitelabelPayError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhitelabelPayError"}],"abstract":[{"type":"text","text":"The main error cases when using the public facing API’s."}],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WhitelabelPayError"}],"url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/noInternetConnection(_:)":{"role":"symbol","title":"WhitelabelPayError.noInternetConnection(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"noInternetConnection"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/noInternetConnection(_:)","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/nointernetconnection(_:)"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/Token":{"role":"symbol","title":"Token","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Token"}],"abstract":[{"type":"text","text":"Token format: <tokenType>\/<token>\/<timestamp><signature>"},{"type":"text","text":" "},{"type":"text","text":"Initialize token from received string."}],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Token","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Token"}],"url":"\/documentation\/whitelabelpaysdk\/token"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/Configuration":{"role":"symbol","title":"Configuration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"abstract":[{"type":"text","text":"SDK Configuration."}],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Configuration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"url":"\/documentation\/whitelabelpaysdk\/configuration"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/TokenType/payment":{"role":"symbol","title":"TokenType.payment","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"payment"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/payment","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/tokentype\/payment"},"doc://WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/storeFailure(_:)":{"role":"symbol","title":"WhitelabelPayError.storeFailure(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"storeFailure"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?)"}],"abstract":[],"identifier":"doc:\/\/WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/storeFailure(_:)","kind":"symbol","type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/storefailure(_:)"}}}
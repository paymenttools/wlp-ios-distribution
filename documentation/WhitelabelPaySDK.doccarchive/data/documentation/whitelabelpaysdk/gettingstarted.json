{"abstract":[{"type":"text","text":"The SDK is a convienient wrapper around the White Label Rest API. It provides a way solution to register the user device and store tokens for offline usage."}],"hierarchy":{"paths":[["doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/whitelabelpaysdk\/gettingstarted"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/GettingStarted"},"kind":"article","metadata":{"title":"Getting Started with WhitelabelPay","modules":[{"name":"WhitelabelPaySDK"}],"roleHeading":"Article","role":"article"},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"items":[{"content":[{"inlineContent":[{"text":"Configuration","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Registering a user’s device."}]}]},{"content":[{"inlineContent":[{"text":"Retrieving, signing, and managing tokens for various payment operations.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Fetching payment means and payment tokens from the server.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Deactivate payment means","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Handling errors related to token and payment operations."}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Configuration","type":"heading","level":2,"anchor":"Configuration"},{"inlineContent":[{"text":"To instantiate an instance of ","type":"text"},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay","isActive":true,"type":"reference"},{"type":"text","text":" please use  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/init(config:urlSessionConfiguration:)"},{"type":"text","text":". The initializer has also an optional param called "},{"type":"codeVoice","code":"urlSessionConfiguration"},{"text":", if you need to customize the URLSession configuration, please pass your custom config and WhitelabelPay will use it internally.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Configuration","isActive":true},{"text":" struc needs tree params:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Vendor’s "},{"inlineContent":[{"code":"tenanId","type":"codeVoice"}],"type":"strong"},{"type":"text","text":" of type "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"codeVoice","code":"environment"}],"type":"strong"},{"type":"text","text":" of type "},{"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Env","isActive":true}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"codeVoice","code":"azp"}],"type":"strong"},{"type":"text","text":": JWT - Authorized party of type "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The host app will be responsible for keeping the reference to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay"},{"text":" instance.","type":"text"}]}],"style":"important"},{"inlineContent":[{"text":"Example usage:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","","    let configuration = Configuration(tenantId: \"xx7xxx46-2297-4872-96xx-7xxx213xxxxx\",","                                      environment: .development,","                                      azp: \"wlp-integration-client\")","","    let whitelabel = try WhitelabelPay(config: configuration)","","    \/\/ The instance has to be stored by the host app for future use.","","    return true","}"],"type":"codeListing"},{"type":"aside","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"Make sure to replace the parameters with valid values. The ones in this example are not valid!","type":"text"}]}],"style":"tip"},{"name":"Note","type":"aside","content":[{"inlineContent":[{"text":"For testing the integration of the SDK in your host application, use the ","type":"text"},{"code":"integration","type":"codeVoice"},{"type":"text","text":" environment. Please make sure to switch the environment to "},{"type":"codeVoice","code":"production"},{"text":" once you build your application for production.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The "},{"type":"codeVoice","code":"development"},{"type":"text","text":" environment is unstable and should only be used if this has been advised by us."}],"type":"paragraph"}],"style":"note"},{"level":2,"type":"heading","anchor":"Synchronisation","text":"Synchronisation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to syncronise the SDK with the backend, call the async function "},{"isActive":true,"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/sync()","type":"reference"},{"type":"text","text":". The function will also return a "},{"type":"codeVoice","code":"State"},{"text":" enum which represents the new status. The function is marked as ","type":"text"},{"code":"@discardableResult","type":"codeVoice"},{"text":" so the return value can be ignored.","type":"text"}]},{"type":"table","rows":[[[{"inlineContent":[{"text":"State","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Description"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"State\/inactive"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The device is not registered with the backend and no onboarding tokens are available."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"State\/onboarding"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Currently there are only onboarding tokens and the user is in the process of onboarding"}]}]],[[{"type":"paragraph","inlineContent":[{"code":"State\/active","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"text":"There is an active payment mean and the user can perform payments with it.","type":"text"}]}]]],"header":"row"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage:"}]}],"type":"paragraph"},{"code":["do {    ","    \/\/ Request an onboarding token.","    let token = try await whitelabel.getEnrolmentToken()","    ","    \/\/ Generate an aztec image with the signed value of the token.","    let data = try token.stringRepresentation","    \/\/ Draw the aztec code image. ","","} catch {","    print(\"Error during device registration: \\(error)\")","}"],"type":"codeListing","syntax":"swift"},{"anchor":"PaymentMeans","type":"heading","text":"PaymentMeans","level":2},{"inlineContent":[{"text":"Request the list of payment means by calling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/getPaymentMeans(fetchMode:)","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"This function fetches the current list payment means. Currently only one payment means can be active and all the locally stored payment tokens will be part of this active payment means.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The function takes a parameter of type ","type":"text"},{"isActive":true,"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode","type":"reference"},{"type":"text","text":", this defines how the logic of retrieving the payment means."},{"text":" ","type":"text"},{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode\/fromLocalFirst","isActive":true},{"type":"text","text":" if you expect to have locally stored payment means and you want to retrieve them without waiting for the network request to finish. The SDK will check first for locally stored payment means and will return them, at the same time it will send a request on a differenct concurrency context to retrieve the most up to date list and will suppress any errors that could be triggered."},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode\/network"},{"text":", if you want to always make sure you retrieve the most up to date list, this will send a request to the server and will wait for the server response.","type":"text"}]},{"items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"An asynchronous array of ","type":"text"},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/PaymentMean","type":"reference","isActive":true},{"text":".","type":"text"}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Returns","type":"text"}]}]}}],"type":"termList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example usage:","type":"text"}]}],"type":"paragraph"},{"code":["do {","    let paymentMeans = try await whitelabel.getPaymentMeans()","} catch {","    print(\"Error during payment means fetching: \\(error)\")","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Performing a payment with a signed Token","anchor":"Performing-a-payment-with-a-signed-Token"},{"type":"paragraph","inlineContent":[{"text":"Retrieve a payment token by calling the async function ","type":"text"},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/getPaymentToken(fetchMode:)","isActive":true,"type":"reference"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function takes a parameter of type "},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode","isActive":true,"type":"reference"},{"text":", this defines how the logic of retrieving the token.","type":"text"},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode\/fromLocalFirst","isActive":true},{"type":"text","text":" if you expect to have locally stored tokens and you want to retrieve one without waiting for the network request to finish. The SDK will check first for locally stored tokens and will return the first one and at the same time it will send a request on a differenct concurrency context and will suppress any potential network errors."},{"text":" ","type":"text"},{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode\/network","isActive":true},{"text":", if you want to always make sure you retrieve the most fresh token, this will send a request to the server and will wait for the server response. Scenario: Use this option if the user did not perform a payment in a longer period of time.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If there is no internet connection and there are locally stored tokens, it will return a signed token from the local storage.","type":"text"}]},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Please note that currently there are only 5 tokens stored and when the user is in offline mode, calling "},{"code":"getToken()","type":"codeVoice"},{"type":"text","text":" multiple times can result in the token storage being emptied. So, keep in mind that requesting a token will automatically remove it from the offline storage even if it was not actually used for payment."}]}],"type":"aside"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous "},{"isActive":true,"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Token"},{"text":" of type ","type":"text"},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/payment","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/onboarding","type":"reference","isActive":true},{"type":"text","text":" if no payment mean is active."}]}]},"term":{"inlineContent":[{"inlineContent":[{"text":"Returns","type":"text"}],"type":"strong"}]}}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example usage:"}]}]},{"type":"codeListing","syntax":"swift","code":["do {","    let token = try await whitelabel.getPaymentToken()","","   \/\/ Generate an aztec image with the signed value of the token.","   let data = try token.stringRepresentation","   \/\/ Draw the aztec code image. ","   ...","} catch {","    print(\"Error during token fetching: \\(error)\")","}"]},{"type":"heading","level":2,"anchor":"Payment-Means-Deactivation","text":"Payment Means Deactivation"},{"type":"paragraph","inlineContent":[{"text":"Deactivates an active payment means.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This function sends an HTTP request to the server to deactivate the specified payment means."},{"text":" ","type":"text"},{"type":"text","text":"It also removes any associated tokens from storage. If the operation is successful, it returns "},{"type":"codeVoice","code":"True"},{"text":".","type":"text"}],"type":"paragraph"},{"items":[{"term":{"inlineContent":[{"inlineContent":[{"text":"Parameter","type":"text"}],"type":"strong"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"paymentMeansId"}],"type":"emphasis"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"The identifier of the payment means to deactivate."}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"inlineContent":[{"text":"Returns","type":"text"}],"type":"strong"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"text":" if the deactivation was successful, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}]}]}},{"term":{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Throws","type":"text"}]}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/failureToRetrievePaymentMeans(_:)","isActive":true},{"type":"text","text":" if an error occurs during the deactivation process."}]}]}}],"type":"termList"},{"name":"Tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Be sure to handle the potential errors this function might throw."}]}],"type":"aside","style":"tip"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example usage","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"codeListing","code":["do {","    let isSuccess = try await whitelabel.deactivatePaymentMeans(paymentMeansId: someId)","    if isSuccess {","        print(\"Payment means successfully deactivated.\")","    } else {","        print(\"Failed to deactivate payment means.\")","    }","} catch {","    print(\"Error during payment means deactivation: \\(error)\")","}"],"syntax":"swift"},{"anchor":"Transactions-available-in-future-versions","level":3,"text":"Transactions - available in future versions","type":"heading"},{"inlineContent":[{"type":"text","text":"Fetch payment transactions from the server."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This function sends an HTTP request to the server to fetch payment transactions.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It returns an array of "},{"type":"codeVoice","code":"TransactionDTO"},{"type":"text","text":" objects, representing payment transactions."}]},{"items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"An asynchronous array of ","type":"text"},{"code":"TransactionDTO","type":"codeVoice"},{"text":" representing payment transactions.","type":"text"}]}]},"term":{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Returns","type":"text"}]}]}}],"type":"termList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example usage","type":"text"}]},{"text":":","type":"text"}]},{"type":"codeListing","code":["do {","    let transactions = try await whitelabel.fetchTransactions()","} catch {","    print(\"Error during transactions fetching: \\(error)\")","}"],"syntax":"swift"},{"name":"Warning","type":"aside","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This feature will be available in a future release."}]}]},{"anchor":"Reseting","level":2,"text":"Reseting","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Purge all SDK data from the device’s keychain."}]},{"inlineContent":[{"text":"This function calls the ","type":"text"},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/reset()","isActive":true,"type":"reference"},{"text":" method from the ","type":"text"},{"type":"codeVoice","code":"store"},{"text":" object which is responsible for erasing all stored data from the device’s keychain.","type":"text"}],"type":"paragraph"},{"type":"termList","items":[{"term":{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Throws","type":"text"}]}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If any error occurs during data removal, might happen if the app has troubles accessing the keychain.","type":"text"}]}]}}]},{"type":"aside","content":[{"inlineContent":[{"text":"Use this function with caution, as it will permanently remove all SDK data including the enrollment\/registration status.","type":"text"}],"type":"paragraph"}],"style":"tip","name":"Tip"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Example usage"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["do {","    try whitelabel.reset()","} catch {","    print(\"Error during data reset: \\(error)\")","}"]},{"type":"heading","level":2,"anchor":"Environments","text":"Environments"},{"style":"warning","name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"When switching the environment please make sure you also call the reset() func. If you miss that the SDK will be in an incositent state that will result in getting authorization errors.","type":"text"}]}]},{"anchor":"Data-Collection","level":2,"text":"Data Collection","type":"heading"},{"inlineContent":[{"text":"PaymentTools SDK does not store or collect personal or app related data other than an unique identifier generated when the SDK is initialized for identification purposes.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPay/getPaymentToken(fetchMode:)":{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/getPaymentToken(fetchMode:)","abstract":[{"type":"text","text":"Request a token, this will be  a payment token from the current active payment means."},{"text":" ","type":"text"},{"text":"If a payment token will be retrieved, it will also be automatically purged from the local storage in order","type":"text"},{"text":" ","type":"text"},{"text":"to avoid storing potentially used tokens.","type":"text"}],"url":"\/documentation\/whitelabelpaysdk\/whitelabelpay\/getpaymenttoken(fetchmode:)","kind":"symbol","role":"symbol","type":"topic","title":"getPaymentToken(fetchMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getPaymentToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fetchMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FetchMode","preciseIdentifier":"s:16WhitelabelPaySDK9FetchModeO"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:16WhitelabelPaySDK5TokenP","text":"Token","kind":"typeIdentifier"}]},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/FetchMode/fromLocalFirst":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"fromLocalFirst","kind":"identifier"}],"abstract":[{"text":"Returns the token directly from the local storage if one exists.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If no tokens exist locally and there is a payment means active, the SDK will wait for the"},{"text":" ","type":"text"},{"type":"text","text":"network request to finish."}],"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode\/fromLocalFirst","kind":"symbol","type":"topic","title":"FetchMode.fromLocalFirst","url":"\/documentation\/whitelabelpaysdk\/fetchmode\/fromlocalfirst"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPay/init(config:urlSessionConfiguration:)":{"url":"\/documentation\/whitelabelpaysdk\/whitelabelpay\/init(config:urlsessionconfiguration:)","abstract":[{"type":"text","text":"Main initializer for "},{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay","isActive":true,"type":"reference"},{"text":".","type":"text"}],"role":"symbol","title":"init(config:urlSessionConfiguration:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"config"},{"text":": ","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:16WhitelabelPaySDK13ConfigurationV"},{"text":", ","kind":"text"},{"text":"urlSessionConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"URLSessionConfiguration","preciseIdentifier":"c:objc(cs)NSURLSessionConfiguration"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/init(config:urlSessionConfiguration:)","kind":"symbol","type":"topic"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPay/getPaymentMeans(fetchMode:)":{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/getPaymentMeans(fetchMode:)","abstract":[{"type":"text","text":"Request the payment means list."}],"url":"\/documentation\/whitelabelpaysdk\/whitelabelpay\/getpaymentmeans(fetchmode:)","kind":"symbol","role":"symbol","type":"topic","title":"getPaymentMeans(fetchMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getPaymentMeans","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"fetchMode"},{"text":": ","kind":"text"},{"text":"FetchMode","kind":"typeIdentifier","preciseIdentifier":"s:16WhitelabelPaySDK9FetchModeO"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"PaymentMean","preciseIdentifier":"s:16WhitelabelPaySDK11PaymentMeanV"},{"kind":"text","text":"]"}]},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/Configuration":{"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Configuration","type":"topic","url":"\/documentation\/whitelabelpaysdk\/configuration","kind":"symbol","role":"symbol","abstract":[{"text":"SDK Configuration.","type":"text"}],"title":"Configuration","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Configuration","kind":"identifier"}],"navigatorTitle":[{"text":"Configuration","kind":"identifier"}]},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPay/sync()":{"url":"\/documentation\/whitelabelpaysdk\/whitelabelpay\/sync()","abstract":[{"type":"text","text":"Sync the local SDK state with the backend."},{"text":" ","type":"text"},{"text":"Should be called whenever appropriate to have the SDK in a synced state.","type":"text"}],"role":"symbol","title":"sync()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sync"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WhitelabelPayState","preciseIdentifier":"s:16WhitelabelPaySDK0aB5StateO","kind":"typeIdentifier"}],"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/sync()","kind":"symbol","type":"topic"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/Env":{"role":"symbol","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Env","abstract":[{"type":"text","text":"The "},{"code":"Env","type":"codeVoice"},{"text":" defines on which environment the SDK should Run.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Env"}],"type":"topic","title":"Env","navigatorTitle":[{"text":"Env","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/whitelabelpaysdk\/env"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/TokenType/onboarding":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"onboarding","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/whitelabelpaysdk\/tokentype\/onboarding","type":"topic","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/onboarding","title":"TokenType.onboarding"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPay/reset()":{"type":"topic","url":"\/documentation\/whitelabelpaysdk\/whitelabelpay\/reset()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"title":"reset()","kind":"symbol","abstract":[{"text":"Purge all SDK data. This will effectively reset the SDK for a clean start.","type":"text"}],"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay\/reset()"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK":{"type":"topic","url":"\/documentation\/whitelabelpaysdk","title":"WhitelabelPaySDK","kind":"symbol","abstract":[],"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK","role":"collection"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/PaymentMean":{"kind":"symbol","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/PaymentMean","navigatorTitle":[{"kind":"identifier","text":"PaymentMean"}],"title":"PaymentMean","type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/whitelabelpaysdk\/paymentmean","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PaymentMean","kind":"identifier"}]},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/Token":{"role":"symbol","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Token"}],"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/Token","type":"topic","title":"Token","navigatorTitle":[{"text":"Token","kind":"identifier"}],"url":"\/documentation\/whitelabelpaysdk\/token"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/TokenType/payment":{"url":"\/documentation\/whitelabelpaysdk\/tokentype\/payment","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/TokenType\/payment","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"payment"}],"title":"TokenType.payment","kind":"symbol"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/FetchMode/network":{"type":"topic","url":"\/documentation\/whitelabelpaysdk\/fetchmode\/network","kind":"symbol","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode\/network","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"network","kind":"identifier"}],"abstract":[{"type":"text","text":"The SDK will send the network request right away without checking for locally stored tokens."},{"text":" ","type":"text"},{"type":"text","text":"Can be usefull when the user didn’t used whitelabel pay for a long time."}],"title":"FetchMode.network"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPay":{"navigatorTitle":[{"kind":"identifier","text":"WhitelabelPay"}],"type":"topic","title":"WhitelabelPay","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhitelabelPay"}],"url":"\/documentation\/whitelabelpaysdk\/whitelabelpay","kind":"symbol","abstract":[{"text":"WhitelabelPay SDK to enroll into the Payment Tools White Label Pay program.","type":"text"},{"type":"text","text":" "},{"text":"After successful enrollment you can retrieve or remove payment tokens.","type":"text"},{"type":"text","text":" "},{"text":"Public private key, device id, enrollment and payment tokens are","type":"text"},{"type":"text","text":" "},{"text":"stored on the device keychain.","type":"text"}],"identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPay"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/WhitelabelPayError/failureToRetrievePaymentMeans(_:)":{"url":"\/documentation\/whitelabelpaysdk\/whitelabelpayerror\/failuretoretrievepaymentmeans(_:)","title":"WhitelabelPayError.failureToRetrievePaymentMeans(_:)","kind":"symbol","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/WhitelabelPayError\/failureToRetrievePaymentMeans(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"failureToRetrievePaymentMeans","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Thrown when either the SDK fails to load the payment means from the Keychain or"},{"type":"text","text":" "},{"type":"text","text":"the network request has failed in case one was sent. Check the associated value \/ error"},{"type":"text","text":" "},{"text":"for more details about the failure reason.","type":"text"}],"type":"topic"},"doc://wlp-ios-sdk.WhitelabelPaySDK/documentation/WhitelabelPaySDK/FetchMode":{"role":"symbol","identifier":"doc:\/\/wlp-ios-sdk.WhitelabelPaySDK\/documentation\/WhitelabelPaySDK\/FetchMode","abstract":[{"type":"text","text":"The specific mode which should be used to retrieve a token."},{"type":"text","text":" "},{"type":"text","text":"This defines how the SDK returns the token"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FetchMode"}],"type":"topic","title":"FetchMode","navigatorTitle":[{"text":"FetchMode","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/whitelabelpaysdk\/fetchmode"}}}